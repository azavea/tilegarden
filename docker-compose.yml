version: '3.1'
services:
  database:
    build:
      context: ./src/database
      dockerfile: Dockerfile
    expose:
      - "5432"
    working_dir: /home
    volumes:
      - ./data:/home/data
      - ./scripts/load_sample_data:/home/load_sample_data

  tiler:
    build:
      context: ./src/tiler
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      # Variables to pass through from environment-specific .env files
      - ENVIRON
      - USER
      - AWS_PROFILE
      - PROJECT_NAME
      - TILEGARDEN_DB_NAME
      - TILEGARDEN_DB_HOST
      - TILEGARDEN_DB_PORT
      - TILEGARDEN_DB_USER
      - TILEGARDEN_DB_PASSWORD
      - LAMBDA_REGION
      - LAMBDA_ROLE
      - LAMBDA_TIMEOUT
      - LAMBDA_MEMORY
      - LAMBDA_SUBNETS
      - LAMBDA_SECURITY_GROUPS
    links:
      - database:database.internal.tilegarden
    volumes:
      - ./src/tiler:/home/tiler
      - node_modules:/home/tiler/node_modules
      - bin:/home/tiler/bin
      - $HOME/.aws:/root/.aws:ro

  terraform:
    image: hashicorp/terraform:0.11.14
    environment:
      - AWS_PROFILE
      # Providing placeholder defaults here stops docker-compose from warning about missing
      # variables every time you run it.
      - TF_VAR_region=${LAMBDA_REGION:-us-east-1}
      - TF_VAR_source_name=${PROJECT_NAME:-tilegarden}-${USER}-${ENVIRON:-unknown}
    working_dir: /home/terraform
    volumes:
      - ./src/terraform:/home/terraform
      - $HOME/.aws:/root/.aws:ro

volumes:
  node_modules:
  bin:
